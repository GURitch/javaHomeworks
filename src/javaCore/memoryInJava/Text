Задание 5:

В консоли будет 33, так как изменение переменной value в методе changeValue не является ее изменением,
а скорее созданием новой с таким же именем, это никак не повлияет на значение переменной value в методе main.



Задание 6:

Аналогично заданию 5, только тут имеем дело с ссылкой на объект.
Переданная в него ссылка, в результате работы метода, будет ссылаться на новый объект,
что никак не повлияет на значение объекта в методе main. В консоли будет 33



Задание 7:

Так как в методе changeValue мы создаем НОВЫЙ массив, на него в пределах метода будет ссылаться переменная,
с таким же именем (value) как в main, но ни как с ней не связанная.
В консоли будут значения {3,4} как до работы метода changeValue, так и после.



Задание 8:

Так как ссылки в main и changeValue изначально ссылаются на один и тот же объект, то в этом случае,
мы взаимодействуем с самим объектом изменяя его. В консоли будет {99,4}.



Задание 9:

В консоли будет значение Lyapis Trubetskoy, так как в методе changePerson мы не изменили значение
существующего объекта, а просто создали новый объект с значениями Ilya Lagutenko,
с которым в дальнейшем нигде не взаимодействуем.



Задание 10:

В консоли будет Ilya Lagutenko. По аналогии с задачей 8, теперь мы по ссылке взаимодействуем непосредственно
с объектом, изменяя его. При этом если поля класса Person являются public static, то в методе changePerson,
мы можем изменить значение полей просто через оператор присваивания (Person.name = "Ilya"), но как я понял,
согласно инкапсуляции, поля принято делать приватными, а изменять через сеттеры.